#!/bin/bash

# Taken from:
#   https://github.com/mathiasbynens/dotfiles/blob/master/.macos
#   https://github.com/ernstnaezer/dotfiles/blob/master/osx.sh
#   https://github.com/tiiiecherle/osx_install_config/blob/master/11_system_and_app_preferences/11c_osx_preferences_sierra.sh

# Default to show you everything the script is doing.
set -x

# git
if ! [ -L "${HOME}/.git_templates" ]; then
  echo "Creating symlink to dotfiles' git templates at ~/.git_templates."
  ln -Ffs "${HOME}/.dotfiles/git/templates" "${HOME}/.git_templates"
fi
if ! [ -L "${HOME}/.git_scripts" ]; then
  echo "Creating symlink to dotfiles' git scripts at ~/.git_scripts."
  ln -Ffs "${HOME}/.dotfiles/git/scripts" "${HOME}/.git_scripts"
fi
git config --global alias.email-guess '!. ~/.git_scripts/email-guess.sh'
git config --global init.templatedir '~/.git_templates/'

# global
# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true
# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
# Keyboard control access
defaults write NSGlobalDomain AppleKeyboardUIMode 3
# Keyboard repeat
defaults write NSGlobalDomain InitialKeyRepeat -int 15
defaults write NSGlobalDomain KeyRepeat -int 2
# Automatically quit printer app once the print jobs complete
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true
# Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false
defaults write com.apple.menuextra.clock DateFormat -string "MM dd HH:mm"
GLOBAL_BOOL_FALSE=(NSAutomaticCapitalizationEnabled NSAutomaticTextCompletionEnabled NSAutomaticPeriodSubstitutionEnabled NSAutomaticSpellingCorrectionEnabled NSAutomaticQuoteSubstitutionEnabled NSAutomaticDashSubstitutionEnabled ApplePressAndHoldEnabled)
for key in "${GLOBAL_BOOL_FALSE[@]}"
do
  defaults write NSGlobalDomain $key -bool false
done
defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

# keyboards
# Take USB Vendor and Product ID of known external keyboards and change their modifier keys.
# Better way would be to enumerate all HID keyboard and set this on all non-Apple keyboards.
PC_KEYBOARD_MODIFIERS="({HIDKeyboardModifierMappingDst=0;HIDKeyboardModifierMappingSrc=30064771129;},{HIDKeyboardModifierMappingDst=30064771299;HIDKeyboardModifierMappingSrc=30064771298;},{HIDKeyboardModifierMappingDst=30064771303;HIDKeyboardModifierMappingSrc=30064771302;},{HIDKeyboardModifierMappingDst=30064771298;HIDKeyboardModifierMappingSrc=30064771299;},{HIDKeyboardModifierMappingDst=30064771302;HIDKeyboardModifierMappingSrc=30064771303;})"  # capslock does nothing, swap command and alt.
PC_KEYBOARD_IDS=("65261-24672")
for keyboard in "${PC_KEYBOARD_IDS[@]}"
do
  # Bash will single quote $PC_KEYBOARD_MODIFIERS for us.
  defaults -currentHost write NSGlobalDomain com.apple.keyboard.modifiermapping.$keyboard-0 $PC_KEYBOARD_MODIFIERS
done

# dock
defaults write com.apple.dock autohide -bool true
defaults write com.apple.dashboard mcx-disabled -bool true
defaults write com.apple.dock showLaunchpadGestureEnabled -bool false

# clock
defaults write NSGlobalDomain AppleICUForce24HourTime -bool true


# finder
FINDER_BOOL_TRUE=(ShowExternalHardDrivesOnDesktop AppleShowAllFiles AppleShowAllExtensions ShowStatusBar _FXShowPosixPathInTitle DSDontWriteNetworkStores QLEnableTextSelection)
for key in "${FINDER_BOOL_TRUE[@]}"; do
  defaults write com.apple.finder $key -bool true
done
FINDER_BOOL_FALSE=(SidebarTagsSctionDisclosedState ShowPathbar FXEnableExtensionChangeWarning)
for key in "${FINDER_BOOL_FALSE[@]}"; do
  defaults write com.apple.finder $key -bool false
done
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
defaults write com.apple.finder NewWindowTargetPath "file://${HOME}"
# search current folder by default
defaults write com.apple.finder FXDefaultSearchScope SCcf
# column view
defaults write com.apple.finder FXPreferredViewStyle clmv
# desktop grid view
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

# safari
SAFARI_BOOL_TRUE=(AlwaysShowTabBar AlwaysRestoreSessionAtLaunch ShowOverlayStatusBar ShowFullURLInSmartSearchField)
for key in "${SAFARI_BOOL_TRUE[@]}"; do
  defaults write com.apple.safari $key -bool true
done
defaults write com.apple.Safari UniversalSearchEnabled -bool false
defaults write com.apple.Safari SuppressSearchSuggestions -bool true
defaults write com.apple.Safari ShowFavoritesBar -bool false
defaults write com.apple.Safari ShowSidebarInTopSites -bool false
defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2
defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
defaults write com.apple.Safari ProxiesInBookmarksBar "()"
defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
defaults write com.apple.Safari "com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled" -bool true
defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

